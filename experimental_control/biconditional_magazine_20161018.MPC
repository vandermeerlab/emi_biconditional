\Biconditional discrimination
\MEDPC script
\Authors: Emily Irvine, Roman Huszar
\
\Schema of trial types:
\
\   Condition A
\   1. light -> noise- (light1 -> sound2 -)
\   2. light -> tone+  (light1 -> sound1 +)
\   3. flash -> tone-  (light2 -> sound1 -)
\   4. flash -> noise+ (light2 -> sound2 +)
\
\   Condition B
\   1. flash -> noise- (light2 -> sound2 -)
\   2. flash -> tone+  (light2 -> sound1 +)
\   3. light -> tone-  (light1 -> sound1 -)
\   4. light -> noise+ (light1 -> sound2 +)

\
\Total time: ...
\Num trials: 32 total; 1:1:1:1 ratio. Randomized and changed daily.
\Intertrial interval: Average 4min (2.5min to 5.5min)
\Measure times (and output with Python): magazine entry, exit, pellet drop,
\           light on, light off, tone on, tone off

\test session
\List A = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
\List C = 5", 5", 5", 5", 5", 5", 5", 5", 5", 5", 5", 5", 5", 5", 5", 5", 5"

\Magazine training
List A = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
List C = 150", 210", 330", 330", 150", 210", 270", 270", 330", 150", 270", 150", 270", 210", 330", 210", 150"

\ A = trial types
\ B = data array
\ C = list for trial length
\ D = num total trials
\ E = count num flashes in single trial
\ F = index into list A for trial type
\ H = comp record of mag entry vs exit
\ J = pause duration between trials
\ K = index into list C for trial length
\ L = computer record of mag num
\ M = num mag entries
\ N = num trials 1
\ P = num trials 2
\ Q = num trials 3
\ S = num trials 4
\ W = iti countdown
\ X = counter in 0.01s
\ Z = idx into data array

dim B = 9975 \ data array

\ when condition = 0, Condition A is run; when condition = 1 Condition B is run (as given above)
^condition = 0

^mag = 6
^pel = 8
^numtrials = 16
^red = 11
\^cuelight = 16
\^houselight = 7
\^numflashes = 20

\event codes
^MS = 10000 \mag start
^ME = 20000 \mag end
^PD = 30000 \pellet delivery
^light1S = 40000 \light start
^light1E = 50000 \light end
^light2S = 60000 \flash start
^light2E = 70000 \flash end
^sound1S = 80000 \tone start
^sound1E = 90000 \tone end
^sound2S = 100000 \noise start
^sound2E = 110000 \noise end
^trial1S = 120000 \trial 1 start
^trial1E = 130000 \trial 1 end
^trial2S = 140000 \trial 2 start
^trial2E = 150000 \trial 2 end
^trial3S = 160000 \trial 3 start
^trial3E = 170000 \trial 3 end
^trial4S = 180000 \trial 4 start
^trial4E = 190000 \trial 4 end


\Timer
S.S.1,
    s1,
        #start:  ---> s2
    s2,
        0.01": add X ---> sx

\Main state
S.S.2,
    s1,
        #start: ---> s2

    \Initiate trial time based on ITI (J), set trial type (R) and keep track of total trials (D)
    s2,
        0.01": set J = C(K); set W = J/100; set R = A(F); add K; add F; add D ---> s3

    s3,
        0.01": if D > ^numtrials [@true, @false]
                                  @true: ---> s8
                                  @false: ---> s4
    s4,
        J#t: on ^pel; set B(Z) = ^PD+X/100; add Z ---> s5

    s5,
        0.1": off ^pel ---> s6

    s6,
        0.1": on ^pel; set B(Z) = ^PD+X/100; add Z ---> s7

    s7,
        0.1": off ^pel ---> s2

    s8,
        10': ---> stopabortflush

\Count mag entries
S.S.3,
    s1,
        #start: ---> s2
    s2,
        #r^mag: add M ---> sx

\Record mag entries
S.S.4,
    s1,
        0.01": if (L < M) and (H = 0) [@true, @false]
            @true: set B(Z) = ^MS + X/100; add Z; set H = 1; set L = M ---> sx
            @false: if (L = M) and (H = 1) [@2true, @2false]
                @2true: set B(Z) = ^ME + X/100; add Z; set H = 0 ---> sx
                @2false: set L = M ---> sx

\ITI countdown for display
S.S.5,
    s1,
        1": if W > 0 [@reduce, @pass]
            @reduce: set W = W - 1 ---> sx
            @pass: ---> sx

\Display progress
S.S.6,
    s1,
        1": show 1, elps, X/6000, 2, iti, W, 3, Total_trials, D-1 ---> sx

S.S.7,
    s1,
        1": on ^red ---> sx
